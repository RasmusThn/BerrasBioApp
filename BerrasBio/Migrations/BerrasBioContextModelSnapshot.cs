// <auto-generated />
using System;
using BerrasBio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BerrasBio.Migrations
{
    [DbContext(typeof(BerrasBioContext))]
    partial class BerrasBioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataLibrary.Models.ActiveMovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MovieModelId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SaloonModelId")
                        .HasColumnType("int");

                    b.Property<int>("TimeModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieModelId");

                    b.HasIndex("SaloonModelId");

                    b.HasIndex("TimeModelId");

                    b.ToTable("ActiveMovieModels");
                });

            modelBuilder.Entity("DataLibrary.Models.BookingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActiveMovieModelId")
                        .HasColumnType("int");

                    b.Property<int>("BookedTickets")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveMovieModelId");

                    b.ToTable("BookingModels");
                });

            modelBuilder.Entity("DataLibrary.Models.MovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieModels");
                });

            modelBuilder.Entity("DataLibrary.Models.SaloonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SaloonModels");
                });

            modelBuilder.Entity("DataLibrary.Models.SeatModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingModelId")
                        .HasColumnType("int");

                    b.Property<int>("InternalSeatNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<int>("SaloonModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaloonModelId");

                    b.ToTable("SeatModels");
                });

            modelBuilder.Entity("DataLibrary.Models.TimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ShowTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TimeModels");
                });

            modelBuilder.Entity("DataLibrary.Models.ActiveMovieModel", b =>
                {
                    b.HasOne("DataLibrary.Models.MovieModel", "MovieModel")
                        .WithMany()
                        .HasForeignKey("MovieModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLibrary.Models.SaloonModel", "SaloonModel")
                        .WithMany()
                        .HasForeignKey("SaloonModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLibrary.Models.TimeModel", "TimeModel")
                        .WithMany()
                        .HasForeignKey("TimeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieModel");

                    b.Navigation("SaloonModel");

                    b.Navigation("TimeModel");
                });

            modelBuilder.Entity("DataLibrary.Models.BookingModel", b =>
                {
                    b.HasOne("DataLibrary.Models.ActiveMovieModel", "ActiveMovieModel")
                        .WithMany()
                        .HasForeignKey("ActiveMovieModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveMovieModel");
                });

            modelBuilder.Entity("DataLibrary.Models.SeatModel", b =>
                {
                    b.HasOne("DataLibrary.Models.SaloonModel", null)
                        .WithMany("Seats")
                        .HasForeignKey("SaloonModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLibrary.Models.SaloonModel", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
